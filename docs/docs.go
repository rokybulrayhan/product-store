// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/contacts": {
            "get": {
                "description": "Get contact List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Get contact List",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "contact with bulk address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Create contact with bulk address",
                "parameters": [
                    {
                        "description": "Contact And Address data",
                        "name": "Contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpentity.CreateContactAndAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contacts/groups": {
            "get": {
                "description": "get contact group",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Contact Group"
                ],
                "summary": "Get Contact Groups",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "create contact group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact Group"
                ],
                "summary": "Create contact group",
                "parameters": [
                    {
                        "description": "data",
                        "name": "ContactGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpentity.CreateContactGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contacts/groups/{contacts_group_id}": {
            "get": {
                "description": "get contact group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact Group"
                ],
                "summary": "Get contact group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "int",
                        "name": "contacts_group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "update contact group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact Group"
                ],
                "summary": "Update contact group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "int",
                        "name": "contacts_group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Contact type data",
                        "name": "Contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpentity.UpdateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contacts/types": {
            "get": {
                "description": "get contact types",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Contact Type"
                ],
                "summary": "Get contact types",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "bulk update contact type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact Type"
                ],
                "summary": "Bulk update contact type",
                "parameters": [
                    {
                        "description": "Contact type data",
                        "name": "contactType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/httpentity.UpdateContactTypeRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contacts/{contact_id}/addresses": {
            "get": {
                "description": "get contact Address",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Contact Address"
                ],
                "summary": "Get Contact Address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Bulk create contact address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact Address"
                ],
                "summary": "Bulk create contact address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Contact Address data",
                        "name": "ContactAddress",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/httpentity.CreateContactAddressRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contacts/{contact_id}/addresses/{contacts_address_id}": {
            "get": {
                "description": "get contact address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact Address"
                ],
                "summary": "Get contact address by address id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "contacts_address_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "update contact address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact Address"
                ],
                "summary": "Update contact address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "contact_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "contacts_address_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Contact type data",
                        "name": "ContactAddress",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpentity.UpdateContactAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contacts/{id}": {
            "get": {
                "description": "Get contact by contact id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Get contact by contact id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "contact with bulk address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contact"
                ],
                "summary": "Update contact with bulk address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Contact And Address data",
                        "name": "Contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpentity.UpdateContactAndAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httpentity.CreateContactAddressRequest": {
            "type": "object",
            "required": [
                "address",
                "address_type",
                "city",
                "country",
                "email",
                "mobile",
                "telephone",
                "website",
                "zip"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "address_type": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "contact_id": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "mobile": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "httpentity.CreateContactAndAddressRequest": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpentity.CreateContactAddressRequest"
                    }
                },
                "contact": {
                    "$ref": "#/definitions/httpentity.CreateContactRequest"
                }
            }
        },
        "httpentity.CreateContactGroupRequest": {
            "type": "object",
            "required": [
                "contact_group_name"
            ],
            "properties": {
                "contact_group_name": {
                    "type": "string"
                },
                "contact_type_id": {
                    "type": "integer"
                }
            }
        },
        "httpentity.CreateContactRequest": {
            "type": "object",
            "required": [
                "business_name",
                "contact_group_id",
                "description",
                "first_name",
                "job_title",
                "last_name",
                "location_group_id"
            ],
            "properties": {
                "business_name": {
                    "type": "string"
                },
                "contact_group_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "job_title": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "location_group_id": {
                    "type": "string"
                }
            }
        },
        "httpentity.UpdateContactAddressRequest": {
            "type": "object",
            "required": [
                "address",
                "address_type",
                "city",
                "country",
                "email",
                "mobile",
                "telephone",
                "website",
                "zip"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "address_type": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "contact_id": {
                    "type": "string"
                },
                "contacts_address_id": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "mobile": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "httpentity.UpdateContactAndAddressRequest": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpentity.UpdateContactAddressRequest"
                    }
                },
                "contact": {
                    "$ref": "#/definitions/httpentity.UpdateContactRequest"
                }
            }
        },
        "httpentity.UpdateContactGroupRequest": {
            "type": "object",
            "required": [
                "contact_group_name"
            ],
            "properties": {
                "contact_group_id": {
                    "type": "integer"
                },
                "contact_group_name": {
                    "type": "string"
                },
                "contact_type_id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                }
            }
        },
        "httpentity.UpdateContactRequest": {
            "type": "object",
            "required": [
                "business_name",
                "contact_group_id",
                "description",
                "first_name",
                "job_title",
                "last_name",
                "location_group_id"
            ],
            "properties": {
                "business_name": {
                    "type": "string"
                },
                "contact_group_id": {
                    "type": "integer"
                },
                "contact_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "job_title": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "location_group_id": {
                    "type": "string"
                }
            }
        },
        "httpentity.UpdateContactTypeRequest": {
            "type": "object",
            "required": [
                "contact_type_name"
            ],
            "properties": {
                "contact_type_id": {
                    "type": "integer"
                },
                "contact_type_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_location_group": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:2326",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "ERP Contact Service API Documentation.",
	Description:      "This is a sample api documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
